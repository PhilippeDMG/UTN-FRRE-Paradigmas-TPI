ImageMorph subclass: #Alien	instanceVariableNames: 'direccion'	classVariableNames: ''	package: 'GalaxianGame'!!Alien methodsFor: 'as yet unclassified' stamp: 'Adriano 11/24/2023 00:31'!destruir	self delete! !!Alien methodsFor: 'initialization' stamp: 'Adriano 11/24/2023 02:19'!initialize 	|imagenPath imagenJugador|	super initialize.			"Mostrar el diálogo para seleccionar un archivo"	"imagenPath:= (FileSystem disk workingDirectory), '\alien.png'.	imagenJugador:=(ImageReadWriter formFromFileNamed: imagenPath).		self		image: imagenJugador;		resize:(60@60)		."! !Morph subclass: #Bala	instanceVariableNames: ''	classVariableNames: ''	package: 'GalaxianGame'!!Bala methodsFor: 'as yet unclassified' stamp: 'Adriano 11/24/2023 02:42'!comprobarColision	| colision ejercito|		owner ifNotNil:[ 		ejercito:= (owner submorphs) detect:[:morph|morph isMemberOf: EjercitoAliens]. 				ejercito submorphsDo: [ :alien|			"Detectamos si hay algun alien que colisiona con la bala"			colision := (self bounds intersects: alien bounds).			"Eliminamos al alien impactado y a la bala"			colision ifTrue:[ self delete. alien destruir. ]		]	].		! !!Bala methodsFor: 'initialization' stamp: 'Adriano 11/24/2023 00:45'!initialize	super initialize.	self	color: Color red;	extent:8@16	.	! !!Bala methodsFor: 'stepping and presenter' stamp: 'Adriano 11/23/2023 16:46'!stepTime	^1! !!Bala methodsFor: 'stepping and presenter' stamp: 'Adriano 11/24/2023 01:44'!mover	(self top) > (owner top +50) ifTrue: [ 			self position: self position - (0@10). 	]ifFalse:[		self delete	]! !!Bala methodsFor: 'stepping and presenter' stamp: 'Adriano 11/24/2023 01:30'!step	self mover.	self comprobarColision.	! !Morph subclass: #EjercitoAliens	instanceVariableNames: 'direccion'	classVariableNames: ''	package: 'GalaxianGame'!!EjercitoAliens methodsFor: 'initialization' stamp: 'Adriano 11/24/2023 00:41'!initialize	super initialize.		self		color: Color transparent;		borderColor: Color blue;		borderWidth: 1	.! !!EjercitoAliens methodsFor: 'stepping and presenter' stamp: 'Adriano 11/24/2023 00:30'!stepTime	^200! !!EjercitoAliens methodsFor: 'stepping and presenter' stamp: 'Adriano 11/24/2023 00:44'!mover	"Método para mover el ejército de aliens dependiendo de la dirección"	(direccion = 'derecha') ifTrue:[		(self right) < (owner right-400) ifTrue: [ 			self position: self position + (20@0). 		] ifFalse: [ 						direccion:= 'izquierda'		]			]ifFalse:[		(self left) > (owner left+400) ifTrue: [ 			self position: self position - (20@0). 		] ifFalse: [ 						direccion:= 'derecha'		]		]! !!EjercitoAliens methodsFor: 'stepping and presenter' stamp: 'Adriano 11/23/2023 15:54'!step	self mover.	! !Object subclass: #Galaxian	instanceVariableNames: 'puntaje vidas coleccionVidas jugador botonIniciar ventana'	classVariableNames: 'imagenAlien imagenCorazon imagenJugador'	package: 'GalaxianGame'!!Galaxian methodsFor: 'initialization' stamp: 'Adriano 11/24/2023 02:29'!initialize	|titulo|		self cargarTexturas.		"Ventana principal"	ventana := MainWindow new.	ventana 		extent:1080@720;		color: Color black;		position:100@100.		"Boton para iniciar la partida"	botonIniciar := SimpleButtonMorph new.	botonIniciar 		label:'Play'; 		center: ventana center;		color: Color white;		extent: 80@40.			botonIniciar position: (botonIniciar position - (20@0)).		botonIniciar on:#mouseUp send: #iniciarJuego to:self.			"Titulo principal"	titulo := TextMorph new.	titulo 	contents: 'Galaxian';	color: Color green;	center: ventana center;	top: ventana top + 10	.			ventana addMorph: botonIniciar; addMorph: titulo.! !!Galaxian methodsFor: 'initialization' stamp: 'Adriano 11/24/2023 00:23'!iniciar	"Método para abrir el menu principal"	ventana openInWorld ! !!Galaxian methodsFor: 'initialization' stamp: 'Adriano 11/24/2023 02:34'!iniciarJuego"Método que inicializa la partida"	botonIniciar delete.		self añadirJugador.	self añadirEnemigos.	(self añadirVidas:3).	! !!Galaxian methodsFor: 'adding' stamp: 'Adriano 11/24/2023 02:25'!cargarTexturas	| path |		path:= (FileSystem disk workingDirectory), '\alien.png'.	imagenAlien:=(ImageReadWriter formFromFileNamed: path).		path:= (FileSystem disk workingDirectory), '\jugador.png'.	imagenJugador:=(ImageReadWriter formFromFileNamed: path).		path:= (FileSystem disk workingDirectory), '\corazon.png'.	imagenCorazon:=(ImageReadWriter formFromFileNamed: path).! !!Galaxian methodsFor: 'adding' stamp: 'Adriano 11/24/2023 02:40'!añadirVidas:cantVidas	vidas:= cantVidas.		coleccionVidas:= OrderedCollection new.		1 to: cantVidas do: [ :i||corazon|		corazon:= ImageMorph new.		corazon 			image: imagenCorazon;			resize:80@80;			position: ventana position + ((i-1)*50@0)		.				coleccionVidas add:corazon.				ventana addMorph: corazon.	].		                 ! !!Galaxian methodsFor: 'adding' stamp: 'Adriano 11/24/2023 02:19'!añadirEnemigos"Método que añade los aliens a la ventana principal"	|formacion ejercito offsetX|	formacion:=	#(	#(1 1 1 1 1 1)	#(0 1 1 1 1 0)	#(0 0 1 1 0 0)).	ejercito:= EjercitoAliens new.ejercito	center: ventana center;	top: (ventana top + 100) 	.offsetX:= (((formacion at:1) size) * 60) // 2.1 to: formacion size do: [ :i|	1 to: (formacion at:i) size do:[ :j| |valor alien|		valor:=((formacion at:i) at:j).				(valor = 1) ifTrue:[			alien:= Alien new.			alien			center: ventana center;			top: ventana top + 200;			position: ejercito position + (((j-1)*70) - (offsetX) @((i-1)*70));			image: imagenAlien;			resize:(60@60)			.						ejercito addMorph:alien		]	]].ejercito startStepping.ventana addMorph: ejercito.! !!Galaxian methodsFor: 'adding' stamp: 'Adriano 11/24/2023 02:22'!añadirJugador"Método que añade un jugador a la ventana principal"	jugador:= Jugador new.	jugador		center: ventana center;		bottom: (ventana bottom - 80);		image: imagenJugador;		resize:(60@60)		.		ventana addMorph: jugador.! !ImageMorph subclass: #Jugador	instanceVariableNames: 'permitirDisparo cooldown'	classVariableNames: ''	package: 'GalaxianGame'!!Jugador methodsFor: 'setting' stamp: 'Adriano 11/24/2023 00:29'!moverDerecha	self right < (owner right-200) ifTrue: [ 		self position: self position + (20@0). ] ifFalse: [ 		self position: self position ]	! !!Jugador methodsFor: 'setting' stamp: 'Adriano 11/24/2023 00:30'!moverIzquierda	self left > (owner left+200) ifTrue: [ 		self position: (self position - (20@0))] ifFalse: [ 		self position: self position ]! !!Jugador methodsFor: 'stepping and presenter' stamp: 'Adriano 11/24/2023 01:30'!stepTime	^100! !!Jugador methodsFor: 'stepping and presenter' stamp: 'Adriano 11/24/2023 01:24'!step		cooldown:= cooldown - 1.		(cooldown = 0) ifTrue:[		permitirDisparo:=true.		cooldown:=5.		self stopStepping	].		! !!Jugador methodsFor: 'initialization' stamp: 'Adriano 11/24/2023 02:20'!initialize		super initialize.	permitirDisparo := true.	cooldown:= 5.					! !!Jugador methodsFor: 'as yet unclassified' stamp: 'Adriano 11/24/2023 01:23'!disparar	|bala|	(permitirDisparo) ifTrue:[		permitirDisparo:= false.		bala:= Bala new.		bala		position: ((self position) + ((self width // 2)@0));		startStepping.		owner addMorph:bala.				self startStepping	].		! !Morph subclass: #MainWindow	instanceVariableNames: ''	classVariableNames: ''	package: 'GalaxianGame'!!MainWindow methodsFor: 'event handling' stamp: 'Adriano 11/24/2023 01:05'!handleKeystroke: anEvent	|keyValue jugador|		"Obtenemos la tecla presionada"	keyValue:= anEvent keyValue.		"Obtenemos la referencia al jugador"	jugador:= ((self submorphs) detect:[:morph|morph isMemberOf:Jugador]ifNone: [nil]).	"Movemos al jugador dependiendo la el valor de la tecla"	jugador ifNotNil: [				"Tecla D - Mover jugador hacia la derecha"		(keyValue = 100) ifTrue: [ jugador moverDerecha].			"Tecla A - Mover jugador hacia la izquierda"		(keyValue = 97) ifTrue: [ jugador moverIzquierda].				"Tecla espacio - Disparar bala"		(keyValue = 32) ifTrue: [ jugador disparar].	].	! !!MainWindow methodsFor: 'events - processing' stamp: 'Adriano 11/24/2023 00:21'!handleMouseEnter: anEvent	"Cuando el mouse pasa pasa por encima de la ventana, el focus del teclado pasa a la misma.	Esto es para que al presionar una tecla lo detecte el juego y no otra ventana	"	(self hasKeyboardFocus) ifFalse: [ 		anEvent hand newKeyboardFocus: self.		 ]! !